# Github Actions
name: First
on:
  push:
    branches: main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: cache-node-files-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit == '' || steps.cache.outputs.cache-hit == 'false'
        run: npm ci
      - name: Run Lint
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: cache-node-files-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: (steps.cache.outputs.cache-hit == '') || steps.cache.outputs.cache-hit == 'false'
        run: npm ci
      - name: Run Tests
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: cache-node-files-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: (steps.cache.outputs.cache-hit == '') || steps.cache.outputs.cache-hit == 'false'
        run: npm ci
      - name: Run Build to Deploy
        run: npm run build
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: |
          echo "#######################"
          echo "Deploying..."
          echo "#######################"
  report:
    needs: [deploy, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Report Job
        if: ${{failure()}}
        run: |
          echo "#######################"
          echo "#{{ toJSON(github) }}"
          echo "#######################"
